import psutil
import time
import logging

import psutil
import logging
from datetime import datetime

# Set thresholds
CPU_THRESHOLD = 80  # CPU usage percentage
MEMORY_THRESHOLD = 80  # Memory usage percentage
DISK_THRESHOLD = 80  # Disk usage percentage

# Configure logging
logging.basicConfig(filename='system_health.log', level=logging.INFO, format='%(asctime)s - %(message)s')

def check_cpu_usage():
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        alert_message = f"High CPU usage detected: {cpu_usage}%"
        print(alert_message)
        logging.info(alert_message)

def check_memory_usage():
    memory_info = psutil.virtual_memory()
    memory_usage = memory_info.percent
    if memory_usage > MEMORY_THRESHOLD:
        alert_message = f"High Memory usage detected: {memory_usage}%"
        print(alert_message)
        logging.info(alert_message)

def check_disk_usage():
    disk_info = psutil.disk_usage('/')
    disk_usage = disk_info.percent
    if disk_usage > DISK_THRESHOLD:
        alert_message = f"High Disk usage detected: {disk_usage}%"
        print(alert_message)
        logging.info(alert_message)

def check_running_processes():
    processes = psutil.pids()
    alert_message = f"Number of running processes: {len(processes)}"
    print(alert_message)
    logging.info(alert_message)

def main():
    while True:
        check_cpu_usage()
        check_memory_usage()
        check_disk_usage()
        check_running_processes()
        
        # Sleep for 60 seconds before checking again
        time.sleep(60)

if __name__ == "__main__":
    main()